{
    "display_title": "Mobile Game Development: Ethics & Implementation",
    "short_description" : "this is a really long description that will be requested.",
    "raw_md" : "## Ethics of mobile game development and Implementation\\n\n\n_Educational charity maths application design and development._\\n\n\n_by Liam Debell_\\n\n\n- Contents: Contents:\\n- Project objective:\\n- Client requirements:\\n- Application title & development configuration:\\n- Research:\\n- Application 1: Monster Math\\n- Application 2: Moose Math\\n- Evaluating Monster Math and Moose Math\\n- Prototype:\\n- Application start / configuration views:\\n- Game views:\\n- Target platform:\\n- Legal and Ethical:\\n- Test plan:\\n- Alternate solution\\n- Design optimizations:\\n- Constraints:\\n- Device APIs\\n- Documentation\\n- Deployment\\n- Testing\\n- Asset list:\\n- Justification of application\\n- Device testing\\n- User testing & feedback\\n\n\n\n\n**Optimisations 20**\\n\n\n**Evaluation 22**\\n\n\n```\\nDesign 22\\nDevelopment 23\\nFinal Application vs Alternative Solution 26\\nProject management 27\\n```\\n### Project objective:\\n\n\nThe aim of the project is to produce an easy to use,intuitive and responsive mobile application\\n\n\nto help children improve their mental arithmetic.The application is aimed at 9-10yr olds, and\\n\n\nshould include a range of different engaging mathquestions and content forms in order to keep\\n\n\nthe children engaged and interested.\\n\n\n### Client requirements:\\n\n\n```\\n● The application should be a game.\\n● Randomized arithmetic questions\\n○ Whole numbers (1-12)\\n○ Add\\n○ Subtract\\n○ Multiply\\n● 10 Questions per round / game\\n● 3 levels\\n○ Level 0: No time limit\\n○ Level 1: 20s time limit\\n○ Level 2: 10s time limit\\n● Graphics and sound\\n```\\n### Application title & development configuration:\\n\n\nMy application will be called **Mink** , named after thesmall and cute mammal, which aims to be a\\n\n\npleasing and appealing name for children. In termsof the application development, I will be\\n\n\nusing svelteKit, a compiled application framework,that bundles application content at compile\\n\n\ntime. I have chosen to use Svelte because it providesblazing fast and reactive performance\\n\n\n\n\n```\\nwhile maintaining a reusable component structure for application content, improving the\\nperformance for users with slower internet connectionsand lower end hardware. Svelte will also\\n```\\n```\\nhelp to maintain a tidy and consistent codebase, improvingreadability for other developers.\\n```\\n### Research:\\n\n\n#### Application 1: Monster Math\\n\n\n```\\nMonster Math is a mobile maths game for kids aged10-11, which aims to help students develop\\n```\\n```\\nfundamental maths knowledge. The application featuresa small and fun suite of games and\\nplaybooks, aiming to maintain a simple and logicalflow that children can easily understand.\\n```\\n```\\nThe main menu features a visual\\n```\\n```\\nrepresentation of a level system, where\\nusers can see their progress and goals\\n```\\n```\\nas they play through the game.\\n```\\n```\\nThe game does not feature any sign-in\\n```\\n```\\nfunctionality, and approaches data\\n```\\n```\\nstorage locally, keeping track of only the\\nusers level and game information. There\\n```\\n```\\nare no advertisements within the\\napplication, however on the first load the user isoffered more functionality through a paid\\n```\\n```\\nsubscription. There doesn’t seem to be any indicationthat this is meant for an adult to set up,\\nwhich is concerning as it could lead to repeatingpayments made by the child, and is therefore\\n```\\n```\\nsomething that I would like to avoid in my application.\\n```\\n```\\nIn terms of the design, the application features brightcolours and consistent themes such as\\n```\\n```\\nthe ocean and the classroom. Additionally, the soundsfeatured in the game were very appealing,\\n```\\n```\\nand really added personality to each of the\\ndifferent features. There are also a range of\\n```\\n```\\nmascots that are featured throughout the\\napplication flow, providing the user with pop-ups\\n```\\n```\\nand “motivation”. This is good for young users asit\\nmakes it more personable and entertaining.\\n```\\n\n\n```\\nAlthough the application is easy to use and visually appealing, the design is a little simplistic\\n```\\n```\\nand maybe too childish for the target audience. Childrenages 10-11 in 2021 generally have\\naccess to mobile phones from a much younger age dueto how they have been normalized,\\n```\\n```\\nmeaning this age group will have a better understandingon how user interfaces work and would\\nneed less guidance than this game offers. Making ittoo simplistic could put the target audience\\n```\\n```\\noff of the game. It is still important however totailor towards the intended user demographic\\nwith larger buttons and bigger text in order to improvethe user experience.\\n```\\n#### Application 2: Moose Math\\n\n\n```\\nMoose Math is an engaging mobile maths\\n```\\n```\\nadventure game for kids aiming to teach a\\n```\\n```\\nrange of different skills including: addition,\\nsubtraction, sorting and geometry. The\\n```\\n```\\napplication features a range of different\\ncustom game modes, each of them aiming to\\n```\\n```\\nprovide a fun and educational experience.\\n```\\n```\\nThe application’s design is simplistic with a combinationof sharp and rounded geometry\\n```\\n```\\nmaking up a sleek and modern interface. It is lessplayful than other similar maths applications\\n```\\n```\\nwhich really makes it stand out. This design reliesmore on the users knowledge of symbols,\\nwhich helps to minimise component clutter.\\n```\\n```\\nOne interesting and unique feature of Moose Math isthe “report card” functionality. Where\\n```\\n```\\nparents or teachers can receive virtual report cardsoutlining users progress and skill building.\\nThis is a really useful tool when considering playfuland meaningful data reporting, using local\\n```\\n```\\ndata to build portfolios on progress.\\n```\\n```\\nThe application does not feature any advertisementsor subscription based services, making it\\n```\\n```\\nvery friendly for direct installation and use by children.There is also no parental configuration\\n```\\n```\\nrequired, and users are immediately set up and readyto play offering a very simple and\\neffortless flow through the application, which isdesirable for both children and adults.\\n```\\n```\\nOne major problem that I came across when testingand researching this application, is the\\n```\\n```\\nperformance. The application becomes quite slow whennavigating through menus that have\\n```\\n\n\n```\\ncomplex transitions. Different levels often feature entire slides of animations that become\\nslower on older devices, which really takes away fromthe sleek design and idea behind the\\n```\\n```\\napplication. This is the only real major drawbackand is becoming less and less prevalent with\\nnewer devices.\\n```\\n#### Evaluating Monster Math and Moose Math\\n\n\n```\\nBoth Monster Math and Moose Math provide great examplesof fun and playful math\\n```\\n```\\napplications for children, showing how effective differentlevels of application complexity can be\\n```\\n```\\nat engaging children in math tasks.\\n```\\n```\\nMonster Math features a much more complex and busyinterface and application flow, with lots\\n```\\n```\\nof different screens and options that can be usedto navigate through the application. It also\\n```\\n```\\nfeatures separate flows for adults and children, whichcaused a lot of uncertainty when it came\\nto setting up the app. While this additional setupdoes provide more customizability, it also\\n```\\n```\\ncreates a lot more confusion when it comes to justplaying the games on the application. This\\ncould pose as a barrier to children who struggle concentratingor have parents who are not able\\n```\\n```\\nto set up the game.\\n```\\n```\\nThe same behaviour is not expressed by Moose Math.Moose Math, features a much smoother\\n```\\n```\\nand more straightforward user flow, requiring no parentalsetup, which really simplifies the entire\\n```\\n```\\nprocess of getting the application running. The flowis important to get right, as it has a large\\nimpact on the user experience and in these two cases,Moose Math definitely does this better.\\n```\\n```\\nIn terms of compatibility, both applications are cross-platformand work on both IOS and\\n```\\n```\\nAndroid respectively. Despite this, Moose Math hadsome performance issues regarding\\ntransitions, and caused huge issues when\\n```\\n```\\ntrying to navigate through different pages.\\nMath Monster performed perfectly, despite all\\n```\\n```\\nof the interface clutter, and therefore was more\\npleasant to use when actually playing the\\n```\\n```\\ngames.\\n```\\n```\\nBoth applications were void of advertisements\\n```\\n```\\nas expected, given the GDPR restrictions that areinplace for showing advertisements to users\\n```\\n\n\n```\\nunder the age of 16. Despite this, Monster Math was pushing content asking for subscriptions\\nto be made for additional features, which is concerningconsidering the app is aimed at children.\\n```\\n```\\nThe messages would come up repeatedly after navigatingthrough the application, which has\\nthe potential to prompt children to subscribe to non-refundableappstore services. Moose Math\\n```\\n```\\non the other hand offered no in-app purchases or subscriptions,adding to its already superior\\nuser flow.\\n```\\n```\\nAfter comparing both games, and looking at the positivesand negatives of each one's design\\n```\\n```\\nand gameplay, I have decided to take more influencefrom Moose Math. Despite the\\nperformance issues with the application, Moose Mathclearly provides a more straightforward\\n```\\n```\\nand true experience to users, and one of the mainfeatures that really solidified this idea is the\\nsimplistic and yet functional interface design. Ifound the low poly shapes and textures to be\\n```\\n```\\nmuch easier to understand while still providing aclear and linear direction for the applications\\nnavigation flow. As a result, I will be aiming fora simplistic and yet “feature-rich” approach, that\\n```\\n```\\nincorporates some of the audio design from MonsterMath with a similarly sleek interface like\\nthat of Moose Math.\\n```\\n### Prototype:\\n\n\n#### Application start / configuration views:\\n\n\n\n\n#### Game views:\\n\n\n## Target platform:\\n\n\n```\\nUsing Svelte for development gives me the flexibilityto release and run my application on\\nalmost any platform including: web, IOS and Android.I am going for an offline-first PWA\\n```\\n```\\n(progressive web app) approach, which will allow meto provide near native performance to\\nusers both online and offline. One of the main reasonsI have chosen to develop a PWA is the\\n```\\n```\\nreduced development time and complexity, where contentis served from a standard web server,\\nrequiring only a single codebase to run on nearlyany device. This is great, as it removes the\\n```\\n```\\nmiddleman of modern application stores such as: GooglePlay and the App store, requiring no\\nfees aside from hosting costs to run the application.\\n```\\n```\\nIn order for the application to function properlyoffline, a service worker and application manifest\\n```\\n```\\nneed to be configured. The service worker runs inthe background of the application at all times\\nand mutates the behaviour of standard web functionssuch as fetching and caching. Unlike a\\n```\\n```\\nconventional application that is bundled to an executablebinary such as an .apk or .ipa, a PWA\\nrequires an initial installation where specified contentis caught upon fetch events made by the\\n```\\n```\\nuser and saved to the application cache. This content,when requested, can then be served\\n```\\n\n\nstraight from the cache without the need for additional network events, allowing the application\\n\n\nto function in an offline first manner. The installationrequires the user to save the application to\\n\n\ntheir home screen through any browser, where the operatingsystems default browser engine\\n\n\nwill take over and start handling the applicationas if it were installed natively on the device.\\n\n\nFrom this point, the user can start using the applicationjust like any other.\\n\n\nThe application manifest contains general informationabout the application including:\\n\n\n```\\n● Splash screen\\n```\\n```\\n● Icons\\n● Description\\n```\\n```\\n● Name\\n● Version\\n```\\nThe installation process can make use of these valuesto download and display content in the\\n\n\nright order and resolution for the device, providinga much more seamless experience for\\n\n\ninstalling and running the application.\\n\n\n## Legal and Ethical:\\n\n\nOne major legal factor that needs to be taken intoconsideration is in-app purchases or\\n\n\nsubscriptions. Mink will be a free to download application,requiring no initial payment,\\n\n\nsubscription or in-app purchase to get running, aimingto provide the smoothest installation for\\n\n\nboth parents and children. This approach has beentaken to reduce parental concern and reduce\\n\n\nthe amount of “friction” that users experience whentrying to use the application.\\n\n\nSimilarly to in-app purchases, Mink’s approach todata storage is very simple and secure. Users\\n\n\ndata will be locally saved to the device, and willnever exit the locality of the browser or app. This\\n\n\napproach has been taken to eliminate any potentialbreaches of GDPRs regulations on storing\\n\n\ndata on children under the age of 13. Children underthe age of 13 are unable to provide their\\n\n\nown consent, and therefore subsequent accounts ordata registered under their names must be\\n\n\nmanaged by a parent or guardian. Data stored underthe Mink application can be easily removed\\n\n\ninside of the application, aiming to be as transparentas possible with users.\\n\n\n\n\nI have chosen to omit any form of advertising from the Mink application, keeping with a\\n\n\ncompletely stock interface that can be reliably navigated through without unwanted pop-ups or\\n\n\nvideo ads. This again is to keep the application asfrictionless as possible.\\n\n\n## Test plan:\\n\n\n```\\nTest number Test data Expected result Actual result\\n```\\n```\\n1 Touchscreen\\npressed on start\\nbutton\\n```\\n```\\nThe application should\\nstart the navigation\\nanimation towards the\\nsetup route.\\n```\\n```\\n2 Touchscreen\\npressed on back\\nbutton. “/”, “/home”,\\n“/setup”\\n```\\n```\\nThe application should\\nreturn to the page\\ndescribed by the\\ncomponent options.\\n```\\n```\\n3 Name: “”, 1234 The application should\\noutput an appropriate\\nerror message describing\\nthe form field that is\\nwrong.\\n```\\n```\\n4 Age 1234, “words”,\\n“”\\n```\\n```\\nThe application should not\\nallow the form to be\\nsubmitted, and should\\noutput an appropriate\\nerror message describing\\nthe issue with that row.\\n```\\n```\\n5 Difficulty: 0, 1, 2, 3,\\n4, “words”\\n```\\n```\\nThe application should\\nonly allow integer values\\nbetween from 1-3 and\\nexclude all non integer\\ntypes.\\n```\\n```\\n6 Accessibility:\\n“colour”, “vision”,\\n“sound”, “other”\\n```\\n```\\nApplication should not\\nallow the form to be\\nsubmitted when matching\\nthe validation schema, the\\nrow “other” should return\\nan error to the user if the\\nform is mutated.\\n```\\n\n\n7 Homepage:\\ntouchscreen\\npressed history\\nbutton\\n\n\n```\\nApplication should start\\nnavigation animation and\\nshould push to the /history\\nroute.\\n```\\n8 Homepage;\\ntouchscreen\\npressed user\\nbutton\\n\n\n```\\nApplication should start\\nnavigation animation and\\nshould push to the /user\\nroute.\\n```\\n9 Homepage:\\nTouchscreen\\npressed settings\\nbutton\\n\n\n```\\nApplication should start\\nnavigation animation and\\nshould push to the\\n/settings route.\\n```\\n10 Touchscreen\\npressed on play\\n\n\n```\\nApplication should start\\nthe game configuration\\nand switch to /play route.\\n```\\n11 Answer = 10\\nUser input = 8,\\n\n\n```\\nAnswer = 10,\\nUser input = 10\\n```\\n```\\nRound counters should be\\nincremented and the user\\nshould not be awarded a\\npoint.\\nRound counter should be\\nincremented and the user\\nshould be awarded one\\npoint.\\n```\\n12 Rounds = 10 The game should end and\\nthe user's recorded score\\nshould be sent to the\\nscreen.\\n\n\n13 Touchscreen event\\nfor restart\\n\n\n```\\nThe application should\\nstart game configuration\\nand should reset the\\nprevious score and round\\ncounter.\\n```\\n14 Timer reaches\\nthreshold for\\ndifficulty levels:\\n1,2,\\n\n\n```\\nTimer should not display\\nfor level 1, timer should\\ndisplay 20s for level2 and\\n10s for level3.\\n```\\n\n\n## Alternate solution\\n\n\n```\\nThe alternate solution provides the same level offunctionality as\\n```\\n```\\nrequested by the client, however features a vastlydifferent layout\\nfrom “Mink”. While Mink aims to provide both detailed\\n```\\n```\\ninformation and a simplistic layout, the alternativeonly aims to\\nprovide a simple to use interface, with no additionalmenus for\\n```\\n```\\nconfiguring user settings or viewing game history,making the\\napplication feel very blank.\\n```\\n```\\nAdvantages Disadvantages\\n```\\n```\\nFar easier to develop Less interesting for younger & older users\\n```\\n```\\nLess implementation for built in functionality\\nlike keyboards\\n```\\n```\\nScreen scaling issues for keyboards\\n```\\n\n\n```\\nEasier for younger users to understand Boring or unsuitable for older users\\n```\\n## Design optimizations:\\n\n\nAfter reviewing the initial designs with the client,I have made various changes to the existing\\n\n\nlayout.\\n\n\n```\\nClient feedback Optimisation\\n```\\n```\\nOne of the main problems with the existing\\ndesign was with the bottom timer\\ncomponent that would be displayed under\\nthe questions. The timer was quite minimal\\nand for smaller devices could be very\\ndifficult to see. The client requested that\\nthe existing timer should be paired with a\\nmore visual and clear indication of the\\nremaining time. This was achieved by\\nadding a text based timer nexto the\\nprogress bar.\\n```\\n```\\nI have added a small text based indicator to\\noutput the remaining time. This should be more\\nobvious on mobile layouts as it provides quite a\\nhigh contrast to the white background.\\n```\\n\n\n```\\nThe question text size was very small in\\ncomparison to other components on the\\nscreen, and not only looked out of place,\\nbut was difficult to see. Therefore the client\\nrecommended that I increase the size and\\nweight of the font used to make the\\nquestion more obvious to the user.\\n```\\n```\\nThe change, while subtle, makes the question\\nclearly distinguishable from other text on the\\nscreen such as the score and question number.\\nThis change also makes other text items that\\nfeature the same weight feel more important\\nthroughout the application, adding to the overall\\ndesign consistency.\\n```\\n```\\nThe application layout was quite simplistic,\\nfeaturing white and blue widgets alongside\\nplain black text, providing no real feel of a\\nchild's game. This is a huge issue, and in\\norder to rectify the problem, I added a\\nglobal background to each of the pages.\\n```\\n```\\nThe implemented background feature while\\nsimplistic, is powerful and provides a much\\nmore game like feel to the application. The use\\nof mathematical symbols aims to provide a\\nbetter feel to each of the different pages, giving\\nsome indication of exactly what the app is all\\nabout.\\n```\\n## Constraints:\\n\n\n\n\n#### Device APIs\\n\n\n```\\nOne of the largest issues with taking a PWA approachfor developing the application, is the\\n```\\n```\\nlimited support and access to native device APIs.Hardware devices such as the accelerometer,\\n```\\n```\\ngyroscope and vibration motor\\nare completely inaccessible on\\n```\\n```\\nsome devices, and cause huge\\ncompatibility issues when\\n```\\n```\\nregarding installation. This\\nproblem is more evident on\\n```\\n```\\ndevices running IOS or devices using safari, as thereis absolutely no support for accessing\\nmost system apis. While this is all true at the moment,future support for these APIs is looking\\n```\\n```\\nvery promising with APIs such as: device orientationand geolocation^1 becoming fully supported\\nacross all modern desktop and mobile browsers. Thelimited access reduces the amount of\\n```\\n```\\nfunctionality that I as a developer can implementreliably, reducing my confidence in creating\\nAPI reliant functionality such as “shake to continue”or haptic feedback for user input.\\n```\\n#### Documentation\\n\n\n```\\nIn addition to poor API support, PWAs are very newto the software development scene, first\\n```\\n```\\nbeing discussed by Google in 2015, and are not verywell documented as of now. This makes\\n```\\n```\\nimplementation more difficult and more time consumingin terms of research and testing.\\nDespite this, going for a PWA approach will providethe most simplistic codebase.\\n```\\n#### Deployment\\n\n\n```\\nExposure on modern app stores such as Google Playand the Apple App Store is impossible\\n```\\n```\\nwithout bundling to a compiled binary. PWAs are specificallydesigned to be installed and run\\n```\\n```\\nthrough web technologies, so releasing to native appstores is difficult as it is down to the\\ndeveloper to handle the installation process. Thisdoes not pose as a huge issue for my\\n```\\n```\\napproach, as the installation can be mostly automatedwith the help of the application manifest.\\n```\\n(^1) \"Progressive Web App (PWA) and Hardware Access -SimiCart.\" 23 Jul. 2020,\\nhttps://www.simicart.com/blog/pwa-hardware-access/.Accessed 28 Apr. 2021.\\n\n\n\n\n## Testing\\n\n\n```\\nTest number Test data Expected result Actual result\\n```\\n```\\n1 Touchscreen\\npressed on start\\nbutton\\n```\\n```\\nThe application should\\nstart the navigation\\nanimation towards the\\nsetup route.\\n```\\n```\\nThe application\\nnavigated to the setup\\nscreen and played the\\nsliding animation.\\n```\\n```\\n2 Touchscreen\\npressed on back\\nbutton. “/”, “/home”,\\n“/setup”\\n```\\n```\\nThe application should\\nreturn to the page\\ndescribed by the\\ncomponent options.\\n```\\n```\\nThe application returned\\nto the specified route\\nbound to the back\\ncomponent, going back\\nto the screen the user\\nsaw previously.\\n```\\n```\\n3 Name: “”, 1234 The application should\\noutput an appropriate\\nerror message\\ndescribing the form field\\nthat is wrong.\\n```\\n```\\nWith name being empty,\\na form error is displayed\\n“name is required”, and\\nthe form is not\\nsubmittable. 1234 is\\naccepted, which is an\\ninvalid name.\\n```\\n```\\n3.1 Name: 1234 The application should\\noutput “Name can only\\ncontain letters”\\n```\\n```\\nUpon entering 1234, the\\napplication marked the\\nform as invalid and\\noutputted an appropriate\\nerror message to the\\nscreen.\\n```\\n```\\n4 Age 1234, “words”,\\n“”, -\\n```\\n```\\nThe application should\\nnot allow the form to be\\nsubmitted, and should\\noutput an appropriate\\nerror message\\ndescribing the issue with\\nthat row.\\n```\\n```\\n“Words” was not\\naccepted and an\\nappropriate error\\nmessage was displayed\\nto the user. 1234 was not\\naccepted because it was\\nless than 9. Empty string\\nwas not accepted as the\\nfield is required, and -\\nwas not counted as it\\nwas also less than 9.\\n```\\n\n\n4.1 Age: 1234, -1 The application should\\nallow 1234 but not -\\n\n\n```\\n1234, is now accepted,\\nand -1 is still not\\naccepted, outputting an\\nappropriate message to\\nthe user.\\n```\\n5 Difficulty: 0, 1, 2, 3,\\n4, “words”\\n\n\n```\\nThe application should\\nonly allow integer values\\nbetween from 1-3 and\\nexclude all non integer\\ntypes.\\n```\\n```\\n0 is invalid, as the\\ndifficulty ranges from 1-3.\\n1 is valid, along with 2\\nand 3. 4 is invalid and an\\nappropriate error\\nmessage is displayed to\\nthe user. “Words” is valid\\nas it is not of type\\nnumber.\\n```\\n6 Accessibility:\\n“colour”, “vision”,\\n“sound”, “other”\\n\n\n```\\nApplication should not\\nallow the form to be\\nsubmitted when\\nmatching the validation\\nschema, the row “other”\\nshould return an error to\\nthe user if the form is\\nmutated.\\n```\\n```\\nAll of the selected values\\nare properly passed to\\nthe users config, and are\\nnot required. If there are\\nvalues that are not\\n“colour, sound or vision”,\\nthe form will be invalid as\\nthey do not match the\\nspecified validation\\nschema values.\\n```\\n9 Homepage:\\nTouchscreen\\npressed settings\\nbutton\\n\n\n```\\nApplication should start\\nnavigation animation and\\nshould push to the /setup\\nroute.\\n```\\n```\\nThe application navigates\\nto the /setup route, and\\nallows the user to edit\\ntheir existing profile. The\\nsame validation applies\\nto this as with the initial\\nconfiguration.\\n```\\n10 Touchscreen\\npressed on play\\n\n\n```\\nApplication should start\\nthe game configuration\\nand switch to /play route.\\n```\\n```\\nThe play route is\\nnavigated to and the\\nslide in animation is\\nplayed. Additionally, the\\ndifficulty is passed into\\nthe game config.\\n```\\n11 Answer = 10\\nUser input = 8,\\n\n\n```\\nRound counters should\\nbe incremented and the\\nuser should not be\\n```\\n```\\nFor Q: 10, A: 8, the\\napplication does not\\nprompt the user with\\n```\\n\n\n```\\nAnswer = 10,\\nUser input = 10\\n```\\n```\\nawarded a point.\\nRound counter should be\\nincremented and the\\nuser should be awarded\\none point.\\n```\\n```\\nanything, and the timer\\ncontinues to tick until it\\nexpires or the user enters\\na correct answer.\\n```\\n```\\nFor Q: 10, A: 10 the\\napplication accepts the\\nusers input as correct,\\nplaying a success sound\\nand awarding one point.\\nThe next question is then\\nprompted.\\n```\\n```\\n12 Rounds = 10 The game should end\\nand the user's recorded\\nscore should be sent to\\nthe screen.\\n```\\n```\\nWhen the game config is\\nset to use 10 rounds, the\\nuser must play through\\n10 questions. If current\\nround is the same as the\\nconfig rounds, the game\\nends. And the user is\\ngreeted with a game over\\nscreen.\\n```\\n```\\n13 Touchscreen event\\nfor restart\\n```\\n```\\nThe application should\\nstart game configuration\\nand should reset the\\nprevious score and\\nround counter.\\n```\\n```\\nThe application\\nrenavigated to the play\\nroute, and reconfigures\\nthe game to start with 0\\nscore and 0 points. The\\ntimelimit is also reset.\\nThe user is then able to\\nplay another round.\\n```\\n```\\n14 Timer reaches\\nthreshold for\\ndifficulty levels:\\n1,2,\\n```\\n```\\nTimer should not display\\nfor level 1, timer should\\ndisplay 20s for level\\nand 10s for level3.\\n```\\n```\\nThe tick configurations\\nare properly parsed, and\\nare used by the game\\ndepending on the\\ndifficulty that is set by the\\nuser initially.\\n```\\n## Asset list:\\n\n\n```\\nFilename Description File size Source Licence Details\\n```\\n```\\nMinkLogo.svg A simple outline\\nof a Mink.\\n```\\n```\\n3.3kb https://www.flati\\ncon.com/free-ic\\non/mink_\\n```\\n```\\nFlaticon License\\n```\\n\n\n```\\n5?related_id=\\n5655\\n```\\n```\\nGoogle material\\nicons: Settings\\n```\\n```\\nA simple outline\\nof a cog.\\n```\\n```\\n230kb https://fonts.go\\nogle.com/icons?\\nselected=Materi\\nal%20Icons%\\nOutlined%3Asett\\nings\\n```\\n```\\nApache License\\n2.\\n```\\n```\\nGoogle material\\nicons: Schedule\\n```\\n```\\nA simple clock\\nicon.\\n```\\n```\\n230kb https://fonts.go\\nogle.com/icons?\\nselected=Materi\\nal%20Icons%\\nOutlined%3Asch\\nedule\\n```\\n```\\nApache License\\n2.\\n```\\n```\\nGoogle material\\nicons:\\nperson_outline\\n```\\n```\\nA single person\\noutline icon\\n```\\n```\\n230kb https://fonts.go\\nogle.com/icons?\\nselected=Materi\\nal%20Icons%\\nOutlined%3Aper\\nson_outline\\n```\\n```\\nApache License\\n2.\\n```\\n```\\nGoogle material\\nicons: groups\\n```\\n```\\nA group of\\npeople outline\\nicon\\n```\\n```\\n230kb https://fonts.go\\nogle.com/icons?\\nselected=Materi\\nal%20Icons%\\nOutlined%3Agro\\nups\\n```\\n```\\nApache License\\n2.\\n```\\n```\\nError.wav A deeper bell\\nlike error sound.\\n```\\n```\\n296.3kb https://freesoun\\nd.org/people/M\\nativve/sounds/\\n91540/\\n```\\n```\\nAttribution\\nLicense\\n```\\n```\\nSuccess.wav A a cartoon like\\nbell chime\\n```\\n```\\n1.0mb https://freesoun\\nd.org/people/M\\nattLeschuck/sou\\nnds/511484/\\n```\\n```\\nCreative\\nCommons\\nLicense\\n```\\n## Justification of application\\n\n\nI have explained and justified my reasoning for mydesign and implementation choices in a\\n\n\nvideo here:\\n\n\nhttps://drive.google.com/file/d/1jo6QWKn-B8WT70r3kzX9Zyxq9mGtL_A2/view?usp=sharing\\n\n\n\n\n## Device testing\\n\n\n```\\nSG-10 Android 11 SG-9 Android 11 Comments\\n```\\n```\\nSamsung Galaxy S\\nAndroid 11\\n```\\n```\\nSamsung Galaxy S\\nAndroid 11\\n```\\n```\\nInstallation\\nBoth devices were running\\nAndroid version 11, and were\\nable to install the application\\nfrom the signed .apk with no\\nissues.\\nPerformance\\nIn terms of performance, the\\napplication ran flawlessly\\nwhen considering animations\\nand sound on both devices.\\nScaling\\nThe two devices screens\\nwere different sizes and the\\napplication scaled\\nappropriately, respecting max\\nand min values for widths\\nand heights.\\nNative APIs\\nNative storage APIs worked\\nperfectly on both devices, and\\nuser data was able to be\\nsaved directly to the\\napplication cache.\\n```\\n## User testing & feedback\\n\n\nGiven the current restrictions that are inplace toreduce the spread of coronavirus, I was unable\\n\n\nto test the application with the target audience (9-10yrs),and I instead tested the application\\n\n\nwith my colleagues and family members.\\n\n\nThe testing results can be found here:\\n\n\nhttps://drive.google.com/file/d/1HNJy29lbsVkIOEIyQmPPDjUDX62v0clv/view?usp=sharing\\n\n\n### Optimisations\\n\n\n\n\nBased on the feedback received during the user testing phase, I have made various\\n\n\noptimisations and changes to help accommodate a range of different users and fix previously\\n\n\nundiscovered bugs.\\n\n\n```\\nFeedback Response\\n```\\n```\\nUsers should have\\nthe option to confirm\\ntheir answers.\\n```\\n```\\nDuring development, I aimed to reduce the amount ofinput that would\\nbe required for a user, and as a result decided tolisten for correct\\nanswers on each key-press. This approach does notrequire a\\nconfirmation button, and I think it provides a muchcleaner approach\\nto answering questions. As an alternative to userconfirmation for\\nanswers, I have added in an obvious visual flair tohelp reduce any\\nconfusion regarding incorrect answers and correctanswers. The flair:\\n```\\n```\\nThe keypad now flashes green when a correct answeris entered, and\\nwhen paired with the success sound, makes for a muchmore obvious\\ncorrect answer event, reducing confusion when thelatter occurs.\\n```\\n```\\nI should be able to\\nchange the difficulty\\nbefore the game\\nstarts.\\n```\\n```\\nInitially my idea for switching difficulties was toallow the user to\\nmake changes through a configuration screen similarto the setup\\n```\\n\n\n```\\nroute. However due to time limitations and for the sake of keeping the\\napplication as simple as possible, I decided to allowusers to choose\\nbetween the 3 possible difficulties right from thehomescreen. When\\nimplementing this, I replaced the existing unusedicons with a simple\\nlist of possible values and allowed the user to switchbetween them,\\nsaving the selected value to the user's configurationautomatically.\\nThis approach reduces the amount of additional navigationand\\nconfiguration required to make simple changes withinthe application.\\n```\\n```\\nIf you get a question\\nwrong it should clear\\nthe answer for the\\nnext question.\\n```\\n```\\nThis was very easy to implement and fix, and was achievedby simply\\nresetting the state of the custom input. Clearingthe question area\\nhelps to reduce the level of additional input thatusers need to worry\\nabout when playing, and helps streamline the entiregame flow.\\n```\\n```\\nThere should be a\\nback button on the\\nquestion pages so\\nthe user is able to\\nreturn to the Home\\nScreen.\\n```\\n```\\nThe addition of this feature was again very easy toimplement\\nbecause of the way the project was structured withrecyclability in\\nmind. All that was required for this feature was toimport and render\\nthe component that was written for other pages, andbecause of the\\nexported route properties, I was able to quickly dictatewhich routes\\nthe application should return to when on the playscreen.\\n```\\n```\\nThere should be a\\nclear homepage\\nbutton on the restart\\npage.\\n```\\n```\\nWhen implementing the button labeling, it was importantto maintain\\na simple and uncluttered look to each of the onscreenwidgets. To\\nachieve this, I simply added some text to the rightof each navigation\\nbutton to help reduce confusion for younger users,while still\\nremaining simplistic.\\n```\\n### Evaluation\\n\n\n\n\n#### Design\\n\n\n```\\nMy initial designs aimed to provide a\\n```\\n```\\nminimalistic and consistent\\nappearance to the application, while\\n```\\n```\\naccommodating two different\\napplication flows for both parents and\\n```\\n```\\nchildren. One of the main problems\\nthat I encountered when attempting to\\n```\\n```\\nachieve this was the level of design consistency whenconsidering how complex some sections\\nneeded to be. One example of this was the setup screen.The setup screen was designed for\\n```\\n```\\nparents and needed to be designed to fit with thetheme of the app, while also maintaining the\\nexpected level of functionality. In order to meetthese requirements, I decided to incorporate\\n```\\n```\\ncomponents like the primary button, and back buttonsonto the page to help stick with the\\ntheme of the application, and make submission andnavigation as easy as possible. This worked\\n```\\n```\\nwell, and the testing feedback reflects this.\\n```\\n```\\nOne major issue that I encountered when designingthe application was the level of\\nprofessionalism that should be displayed to usersin the target audience (4-10yrs). I settled on a\\n```\\n```\\nmore professional approach on the basis that lotsmore children have access to mobile devices\\nfrom younger ages. This does however have the potentialto reduce the level of engagement\\n```\\n```\\nthat younger users might have when using the application,given the lack of more playful\\nanimations and colours. Despite this however, theapplication should still work well with users\\n```\\n```\\ntowards the older end of the target audience (9-10yrs),and provide a more enjoyable and\\nrespectable experience for them specifically.\\n```\\n```\\nThroughout the entire design process, It has beenmade clear that different areas of the\\n```\\n```\\napplication were overly simplistic, and as a resultdidn’t fit the target audience. I have worked\\niteratively alongside feedback from my colleaguesand the client to optimise the design to best\\n```\\n```\\nfit the target audience. The final version of thedesign now incorporates both a professional and\\nplayful feel, and should provide a smooth transitionfrom parent to child flow.\\n```\\n#### Development\\n\n\n\n\nThroughout development I tracked and committed changesthat I made using git to GitHub. My\\n\n\nrepository can be viewed here:https://github.com/liamdebellada/mink.I approached\\n\n\ndevelopment with two different stages: design implementationand functional implementation.\\n\n\nThis approach allows me to reduce conflicts when consideringthe implementation of different\\n\n\ndata driven components such as lists and preferences,while also allowing for a more coherent\\n\n\nand understandable commit history, making it easierto revert to older versions of the\\n\n\napplication.\\n\n\nWhen implementing the design, I tried to stick witha consistent and recyclable component\\n\n\nstructure, in order to reduce the amount of redundantcode that needed to be written. UI\\n\n\ncomponents such as the “primaryButton” and “transitionWrapper”,were written with slots and\\n\n\nexpandable properties, creating a much more modularconfiguration when it comes to adding\\n\n\nchildren or handling application functions (navigation& animations). An example of this can be\\n\n\nseen here:\\n\n\nWhere each of the exports act as configurable propsthat can be instantiated when the\\n\n\ncomponent is used. These props power the componentand provide instructions on how it\\n\n\nshould behave in the DOM (Document Object Model).In terms of the styling, I used local css\\n\n\nselectors to style elements in a “component by component”basis, meaning each instance of a\\n\n\ncomponent is styled individually, providing a lotmore flexibility when it comes to different states\\n\n\nsuch as active or hover. While this styling approachis more flexible, It can lead to redundant\\n\n\nstyling data being used across the document, whichhas the potential to impact performance.\\n\n\nThe functionality implementation succeeded the designimplementation and consisted of:\\n\n\n```\\n● User persistence\\n● Form validation\\n```\\n```\\n● Persistent configuration\\n● Game implementation\\n```\\nGiven that Mink pulls data from\\n\n\nprevious games, It was necessary to\\n\n\nimplement a user switching system,\\n\n\nwhere registered users could choose\\n\n\n\n\nbetween different accounts locally stored on the device. These users would act as keys to\\n\n\nassociated values like game history, highscores andaccessibility preferences. This functionality\\n\n\nwas implemented by using common device APIs such aslocalStorage, to save values in a\\n\n\nkey-value format similar to JSON (Javascript objectnotation), providing consistent access to\\n\n\ndata on any platform including: web, mobile and desktop.While implementing this functionality,\\n\n\nit was important to maintain a completely offlineapproach, in order to protect both the parents\\n\n\nand children's data. This did not prove to be muchof a limitation however, and storage was\\n\n\nimplemented fully without the need for a server.\\n\n\nValidating user input was a huge factor that neededto be handled properly in order to prevent\\n\n\napplication abuse and unexpected issues. The approachthat I took for validating complex fields\\n\n\nsuch as the setup screen, was to use\\n\n\nvalidation schemas. Validation schemas\\n\n\noutline the shape and types of any object\\n\n\nor value that is referenced, providing\\n\n\ndetailed and useful error data to users.\\n\n\nSchema validation is very reliable and can\\n\n\nbe used to cast values to proper types,\\n\n\nreducing type uncertainty for functionality\\n\n\nwhich depends on specific values. For\\n\n\nuser input that does not require detailed\\n\n\nvalidation, such as the question answer area, I choseto use a custom keypad, to reduce the\\n\n\nnumber of possible values that a user can input, andalso remove any platform specific issues\\n\n\nthat arise with built-in keyboards.\\n\n\n```\\nWhen implementing the functionality and logic forthe game, It\\n```\\n```\\nwas important to consider a recyclable structure witheasily\\nmanageable values for factors like score, time androunds. In\\n```\\n```\\norder to achieve this, I went for a class based approach,where\\nall values and methods associated with the game arecontained\\n```\\n```\\nwithin one object. This approach reduces the amountof\\n“boilerplate” (code that is repeated with little variation)that is\\n```\\n```\\nrequired to run the game, and helps improve reliabilitywhen it\\n```\\n\n\n```\\ncomes to stateful values like the timer. Additionally, classes behave in a polymorphicmanner,\\nmeaning one instance can handle and behave differentlyto changes in values and conditions\\n```\\n```\\nsuch as difficulty or time. This behaviour allowsfor easy customization when considering\\nadding more levels or challenges into the game, requiringlittle to no additional development.\\n```\\n#### Final Application vs Alternative Solution\\n\n\n```\\nWhen designing the application I considered differentlayouts and their effectiveness in allowing\\nusers to understand the application. Initially thedesign was very “busy”, and a large amount of\\n```\\n```\\ncontent was being displayed to users on commonly visitedpages like the homescreen and\\nplayscreen. In order to help reduce the amount offriction that users might feel when attempting\\n```\\n```\\nto navigate and find menus within the application,I replaced various components with lighter\\nand less crowded alternatives.\\n```\\n```\\nOne example of this can be seen here:\\n```\\n```\\nEach of the different screens above are iterationsof the homepage layout. My initial approach,\\n```\\n```\\nas described before, was very busy, and provided fartoo much information in the form of\\nlabeling. For example, the blue list view featured3 different elements in a redundant and visually\\n```\\n```\\ncluttered manner, having the potential to cause confusionand stress for younger users trying to\\nnavigate through the app. In an attempt to eliminatethis, I tried multiple different layouts\\n```\\n```\\nfeaturing smaller and less detailed components.\\n```\\n```\\nWhile these layouts were very simplistic and far easierto understand than\\n```\\n```\\nthe original design, I felt like there was a lackof personality to the page,\\n```\\n```\\nwhich led me to add back the recent game list. Thenew and final addition of\\nthe homescreen layout, takes advantage of horizontalscrolling, showing just\\n```\\n\n\n```\\nenough overflowing containers to indicate a list-like structure to users, alongside a farsimpler\\nstructure for data representation. These factors allowthe same amount of information to be\\n```\\n```\\ndisplayed without feeling cluttered, and the lackof labeling really solidifies this.\\n```\\n```\\nOne final major difference that the alternative solutionfeatures is a\\n```\\n```\\nless complex play screen, where user input relieson the device\\n```\\n```\\nkeyboard. While this approach should allow for a lesscluttered\\nplayscreen, screen scaling issues start to becomeapparent, as\\n```\\n```\\nusers with smaller devices are unable to see certainscreen\\nelements due to the way input fields are handled onsome mobile\\n```\\n```\\ndevices. For this reason, the final application featuresa custom\\nkeypad implementation to not only reduce the amountof data that\\n```\\n```\\nneeds to be validated, but allow for full controlover the scalability\\nand size of the keypad.\\n```\\n```\\nOverall, it is clear that the final solution providesa much clearer and\\n```\\n```\\nbetter featured layout to the alternative, with factorssuch as\\nfunctionality, usability and performance all beingfully considered.\\n```\\n#### Project management\\n\n\n```\\nLink to project repository: https://github.com/liamdebellada/Mink\\n```\\n```\\nThroughout the project I have managed my time effectivelyand the project timeline was\\n```\\n```\\nfollowed closely according to the gantt chart thatwas created upon project initiation, taking into\\nconsideration each of the different tasks that neededto be completed in order to produce a\\n```\\n```\\nfunctional prototype and design documentation. Thefinal prototype was an effective\\nimplementation of what the client requested, and provesto be an easy to use maths application\\n```\\n```\\nfor children. Both the user-testing and client reviewphases prove this, as the feedback received\\nfrom both parties agree that the idea is appropriateand suitable, providing a fast and easy to\\n```\\n```\\nuse solution.\\n```\\n```\\nIn terms of meeting with the client, the requirementsand needs of the educational charity were\\ncollected through in person meetings and email exchanges.Using the feedback recorded from\\n```\\n\n\nthe client meetings, I was able to understand and consider the different aspects that would be\\n\n\nsuitable, and start to think about how I would meetthese requirements in a MVP (minimal viable\\n\n\nproduct).\\n\n\nDespite developing and working on the project accordingto the timeline, there are various\\n\n\nimprovements that I would like to have made regardingthe functionality of the overall gameplay.\\n\n\nThese improvements would include: Increasing the useof animations, where specific events\\n\n\nwould fire customisable transitions featuring thechild's name or score. This could be achieved\\n\n\nthrough the use of a dynamic configuration that rendersconditionally based on different factors\\n\n\nlike high score or time. I believe that these improvementswould make the application more\\n\n\nappealing to more younger users, helping to extendthe target range of users.\\n\n\nThe project was successful, and all optimisationsand feedback received throughout the design\\n\n\nand development process was taken into consideration,with various changes being made to\\n\n\nhelp improve the final product.\\n\n\n\n\n\n\n",
    "repo_url" : null
}
